@import 'includes/fonts';
@import 'includes/graph';
@import 'includes/responsive';

@mixin alpha-me($var1, $var2, $var3:null, $var4:null) {

	// Set variables for global use
	$property: $var1;
	$attributes: null;
	$color: null;
	$color-bg: null;

	// Check if $var2 is a color
	@if ( type-of($var2) == color ) {

		// Set default background if not specified
		@if not $var3 { $var3: #fff; }

		// Update variables
		$color: $var2;
		$color-bg: $var3;

	// Otherwise it should be the attributes
	} @else if ( type-of($var2) != color ) {

		// Set default background if not specified
		@if not $var4 { $var4: #fff; }

		// Update variables
		$attributes: $var2;
		$color: $var3;
		$color-bg: $var4;

	}

	// Extract alpha channel from color
	$percent: alpha($color) * 100%;

	// Make color opaque
	$opaque: opacify($color, 1);

	// Blend color with background.
	$color-solid: mix($opaque, $color-bg, $percent);

	// Return built style with solid color and transparent color
	#{$property}: #{$attributes} $color-solid;
	#{$property}: #{$attributes} $color;

}

html {
	font-size: 62.5%;
}

body {
	font-family: 'Open Sans', sans-serif;
	font-size: 1.2rem;
	overflow-y: scroll;
}

h1 {
	color: #248;
	margin: 0.5em 0;
	text-align: center;
}

fieldset {
	border: none;
	margin: 0;
	padding: 0;
}

pre,
#legend div {
	background: #f9f9f9;
	border: 1px solid #eee;
	border-radius: 1em;
	color: #333;
	display: inline-block;
	font-family: 'Inconsolata', monospace;
	margin: 0;
	text-align: left;
	transition: all 0.5s;
	&:hover {
		background: #eee;
		border: 1px solid #ddd;
		color: #000;
		transition: all 0.5s;
		small.ln {
			color: #bbb;
			transition: all 0.5s;
		}
	}
}

pre {
	padding: 1em 4em 1em 1em;
}

svg {
	width: 100%;
	height: 100%;
}

button,
input,
select,
textarea {
	background: #fff;
	@include alpha-me(border, 1px solid, rgba(black, 0.3));
	outline: none;
	margin: 1em 1em  1em .5em;
	padding: 0.2em 0.4em;
	&:hover {
		@include alpha-me(background, rgba(black, 0.05), white);
	}
	&:focus {
		background: #fff;
		@include alpha-me(box-shadow, 0 0 1em, rgba(black, 0.2));
	}
}

select {
	margin-top: .5em;
}

input {
	&[type=submit],
	&[type=reset] {
		margin: 1em 0.1em;
	}
}

legend {
	display: block;
	width: 100%;
	margin: 0.5em 0;
	font-size: 1.6rem;
	font-weight: bold;
	color: #248;
}

var {
	font-weight: bold;
	font-style: italic;
}

footer {
	
}

.container {
	margin: 1em auto 0 auto;
	text-align: center;
}

.center {
	text-align: center;
	&pre {
		padding: 1em;
	}
	span {
		margin: 0 1em;
	}
}

.clear {
	&:after {
		content: '.';
		visibility: hidden;
		display: block;
		height: 0;
		clear: both;
	}
}

.param {
	&:after {
		content: ', ';
	}
	&:last-child {
		&:after {
			content: '';
		}
	}
}

small.ln {
	color: #aaa;
	transition: all 0.5s;
}

#desc {
	margin: 0 1em;
	p {
		display: inline-block;
		text-align: left;
	}
}

#calc {
	label {
		display: block;
	}
	#params {
		label {
			display: inline;
		}
	}
}

#results {
	display: none;
	#plot {
		display: inline-block;
		margin: 0 auto;
	}
}

#legend {
	position: fixed;
	top: 0;
	right: 0;
	margin: 1rem;
	div {
		display: inline-block;
		position: relative;
		padding: .6rem .3rem;
		font-size: 1.2rem;
		h1, ul {
			display: none;
		}
		h1 {
			margin: 0;
			font-size: 1.6rem;
			font-weight: normal;
			text-align: center;
		}
		ul {
			list-style: none;
			margin: .5rem 0;
			padding: 0;
			text-align: left;
			li {
				margin: 0 1rem;
			}
		}
		&:after {
			content: '\f128';
			display: inline-block;
			margin: 0 1em;
			font-family: 'FontAwesome';
			font-size: 1.4rem;
			text-rendering: auto;
			-webkit-font-smoothing: antialiased;
			-moz-osx-font-smoothing: grayscale;
		}
	}
	&:hover {
		display: block;
		div {
			&:after {
				content: '';
				display: none;
			}
			h1, ul {
				display: block;
			}
		}
	}
}

#user-data {
	text-align: center;
	label {
		display: block;
	}
	textarea {
		display: block;
		width: 320px;
		height: 180px;
		margin: .5em auto;
		overflow-y: auto;
	}
}